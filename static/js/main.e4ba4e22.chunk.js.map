{"version":3,"sources":["global-components.js","styled.js","App.js","assets/projects/basididati.md","assets/projects/ingegneriadelsoftware.md","assets/projects/mobdevandroid.md","assets/projects/mobdevios.md","serviceWorker.js","index.js","assets/images/photo.jpg","assets/images/bg.svg","assets/images/basididati.png","assets/images/ingegneriadelsoftware.png","assets/images/mobdevandroid.jpg","assets/images/mobdevios.png"],"names":["breakpoints","AppWrapper","styled","div","BgStatic","bg","AppContainer","Container","AvatarContainer","Col","IconContainer","MoreContainer","Row","MoreChevron","FontAwesomeIcon","RowSection","props","border","className","children","ProjectImg","img","Section","title","ocktokit","Octokit","repositories","BehaviorSubject","data","forEach","repository","repos","get","owner","repo","then","value","name","full_name","description","language","stars","stargazers_count","watchers","watchers_count","fork","forks_count","url","html_url","next","TopSideContainer","xs","Avatar","md","sm","lg","alt","src","photo","IconWithDesc","icon","hasOwnProperty","href","link","size","iconSize","SocialIcons","icons","social","map","index","length","key","TopBar","contact_email","Button","color","PersonalDetails","schoolsData","details","school","type","languages","programming","style","minWidth","surname","birthday","ageDifMs","Date","now","getTime","ageDate","Math","abs","getUTCFullYear","_calculateAge","birthdate","city","state","hobbies","OtherContacts","DropDownContacts","useState","opened","setOpened","CSSTransition","in","timeout","classNames","onClick","faChevronCircleDown","dataDesc","Object","keys","more","dataSep","_","dataValues","push","WhoAmI","whoiam","ProjectContainer","image","markdown","ProgettiUni","basididatiLogo","ingegneriadelsoftwareLogo","mobdevandroidLogo","mobdeviosLogo","GithubProject","undefined","proj","lineHeight","ProgettiPers","initialObservable","setRepos","observable","setRepoObservable","useEffect","pipe","scan","acc","assign","subscribe","unsubscribe","useGithubRepos","skeletals","console","log","App","fluid","Boolean","window","location","hostname","match","library","add","faGithubSquare","faArtstation","faCuttlefish","faJs","faPython","faJava","faBook","ReactDOM","render","StrictMode","theme","primary","boxShadows","borderColor","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.e4ba4e22.chunk.js","sourcesContent":["export const breakpoints = {\n\tsm: \"576px\",\n\tmd: \"768px\",\n\tlg: \"920px\",\n\txl: \"1200px\"\n} \n\nexport const theme = {\n\tprimary: '#f5f5f5',\n\tboxShadows: `0 4.8px 6.3px rgba(0, 0, 0, 0.12), 0 38px 50px rgba(0, 0, 0, 0.14)`,\n\tborderColor: '#999999'\n}","import styled from 'styled-components';\nimport { Container, Col, Row } from 'reactstrap';\nimport { breakpoints } from './global-components';\nimport bg from './assets/images/bg.svg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nexport const AppWrapper = styled.div`\n\tdisplay: grid;\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 20vh 20vw;\n\n\t@media only screen and (max-width: ${breakpoints.md}){\n\t\tpadding: 10vh 15vw;\n\t}\n\n\t@media only screen and (max-width: ${breakpoints.xl}){\n\t\tpadding: 15vh 10vw;\n\t}\n\n\t@media print {\n\t\tpadding: 15vh 5vw;\n\t}\n`;\n\nexport const BgStatic = styled.div`\n\tposition: absolute;\n\tz-index: -1;\n\ttop: 0;\n\tbottom: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: url(${bg});\n\tbackground-size: cover;\n\tbackground-position: center center;\n\tclip-path: polygon(0 0, 100% 0, 100% 40%, 0 48%);\n`\n\nexport const AppContainer = styled(Container)`\n\tbackground-color: #fff;\n`\n\nexport const AvatarContainer = styled(Col)`\n\t@media only screen and (max-width: ${breakpoints.md}){\n\t\tmin-height: 10rem;\n\t}\n`\n\nexport const IconContainer = styled.div`\n\tdisplay: flex;\n\tflex-flow: column;\n\tjustify-content: center;\n\talign-items: center;\n\tp {\n\t\tfont-size: 0.8rem;\n\t}\n`\n\nexport const MoreContainer = styled(Row)`\n\toverflow: hidden;\n\tbox-sizing: border-box;\n\tpadding-top: 0;\n\tmax-height: 0;\n\theight: 100%;\n\twidth: 100%;\n\ttransition: all 0.3s ease-out;\n`\n\nexport const MoreChevron = styled(FontAwesomeIcon)`\n\tposition: absolute;\n\tbackground-color: #fff;\n`\n\nexport const RowSection = function (props) {\n\tlet border = \"border-top\"\n\tif (props.border === \"false\") {\n\t\tborder = \"\"\n\t}\n\treturn <Row {...props} className={`${border} mt-5 mx-2 mx-md-4 px-2 px-md-5 justify-content-center ${props.className}`}>{props.children}</Row>\n}\n\nexport const ProjectImg = styled.img`\n\tmax-width: 256px;\n\tmax-height: 256px;\n\twidth: auto;\n\theight: auto;\n\n\t@media only screen and (max-width: ${breakpoints.sm}){\n\t\tmax-width: 128px;\n\t\tmax-height: 128px;\n\t}\n`\n\nexport const Section = function (props) {\n\treturn <RowSection>\n\t\t<Col className=\"justify-content-center\">\n\t\t\t<h2 className=\"mt-5 text-center\">\n\t\t\t\t{props.title}\n\t\t\t</h2>\n\t\t\t\t{props.children}\n\t\t</Col>\n\t</RowSection>\n}","import React, { useState, useEffect } from 'react';\nimport './argon.scss'\nimport { Button ,Row ,Col} from 'reactstrap';\nimport photo from './assets/images/photo.jpg';\nimport data from './assets/data.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown } from '@fortawesome/free-solid-svg-icons'\nimport { CSSTransition } from 'react-transition-group';\nimport * as comp from './styled';\nimport { Octokit } from '@octokit/rest';\nimport ReactMarkdown from 'react-markdown'\nimport basididati from './assets/projects/basididati.md';\nimport basididatiLogo from './assets/images/basididati.png';\nimport ingegneriadelsoftware from './assets/projects/ingegneriadelsoftware.md';\nimport ingegneriadelsoftwareLogo from './assets/images/ingegneriadelsoftware.png';\nimport mobdevandroid from './assets/projects/mobdevandroid.md';\nimport mobdevandroidLogo from './assets/images/mobdevandroid.jpg';\nimport mobdevios from './assets/projects/mobdevios.md';\nimport mobdeviosLogo from './assets/images/mobdevios.png';\nimport { BehaviorSubject } from 'rxjs';\nimport { scan } from 'rxjs/operators';\nimport Skeleton from \"react-loading-skeleton\";\n\nconst ocktokit = new Octokit();\nconst repositories = new BehaviorSubject([]);\n\ndata.repositories.forEach(repository => {\n  ocktokit.repos.get({\n    owner: repository.owner,\n    repo: repository.repo\n  }).then(value => {\n    const repo = {\n      name: value.data.full_name,\n      description: value.data.description,\n      language: value.data.language,\n      stars: value.data.stargazers_count,\n      watchers: value.data.watchers_count,\n      fork: value.data.forks_count,\n      url: value.data.html_url\n    }\n    repositories.next({ [repo.name]: repo })\n  });\n})\n\n  // https://stackoverflow.com/a/21984136/6791579\nfunction _calculateAge(birthday) { // birthday is a date\n  var ageDifMs = Date.now() - birthday.getTime();\n  var ageDate = new Date(ageDifMs); // miliseconds from epoch\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n\nconst TopSideContainer = function(props) {\n  return <Col xs=\"6\" className={`d-flex justify-content-center align-items-center ${props.className}`}>{props.children}</Col>\n}\n\nconst Avatar = function () {\n  return <comp.AvatarContainer className=\"justify-content-center d-flex order-1 order-sm-1 order-lg-2 p-0\" md=\"12\" sm=\"12\" lg=\"auto\">\n    <div className=\"card-profile-image\">\n      <img alt=\"\" className=\"m-0 rounded-circle\" src={photo}></img>\n    </div>\n  </comp.AvatarContainer>\n}\n\nconst IconWithDesc = function (props) {\n  if (props.icon.hasOwnProperty(\"link\")) {\n    return <comp.IconContainer {...props}>\n      <a href={props.icon.link}>\n        <FontAwesomeIcon size={props.iconSize ? props.iconSize : \"2x\"} icon={props.icon.icon} />\n      </a>\n      <a href={props.icon.link}><span>{props.icon.name}</span></a>\n    </comp.IconContainer>\n  } else {\n    return <comp.IconContainer {...props}>\n      <FontAwesomeIcon size={props.iconSize ? props.iconSize : \"2x\"} icon={props.icon.icon} />\n      <span>{props.icon.name}</span>\n    </comp.IconContainer>\n  }\n}\n\nconst SocialIcons = function (props) {\n  const icons = data.social.map((icon, index) => {\n    if (index !== data.social.length-1) {\n      return <IconWithDesc key={index} icon={icon} className=\"pr-4\" />\n    } else {\n      return <IconWithDesc key={index} icon={icon} />\n    }\n  })\n  return <Row className=\"justify-content-center\">{icons}</Row>\n}\n\nconst TopBar = function() {\n  return <Row className=\"justify-content-center\">\n      <TopSideContainer className=\"pt-7 pt-md-3 order-2 order-sm-2 col-sm-6 order-lg-1 col-lg-6\">\n        <SocialIcons/>\n      </TopSideContainer>\n      <Avatar/>\n      <TopSideContainer className=\"pt-7 pt-md-3 order-3 order-md-3 col-sm-6 order-lg-3 col-lg-6\" >\n        <a href={`mailto:${data.contact_email}`}><Button color=\"primary\">Contact Me</Button></a>\n      </TopSideContainer>\n    </Row>\n}\n\nconst PersonalDetails = function () {\n  const schoolsData = data.details.school.map((school, index) => <div key={index} className=\"h6 mt-2\">\n    <span className=\"font-weight-lighter\">{school.type}</span> @ <span>{school.name}</span>\n  </div>)\n  const languages = data.details.programming.map((value, index) => <Col key={index} xs=\"auto\"><IconWithDesc icon={value} /></Col>)\n  return <Row className=\"justify-content-center d-flex mt-4 mt-md-7\">\n    <Col style={{minWidth: \"256px\"}} lg='auto' className=\"justify-content-center text-center\">\n      <h3>\n        {`${data.details.name} ${data.details.surname}`}\n        <span className=\"font-weight-light\">\n          {`, ${_calculateAge(new Date(data.details.birthdate))}`}\n        </span>\n      </h3>\n      <div className=\"h6 font-weight-300\">\n        {data.details.city}, {data.details.state}\n      </div>\n      {schoolsData}\n      <div className=\"mt-2\">{data.details.hobbies}</div>\n      <Row className=\"mt-5 justify-content-center\">{languages}</Row>\n    </Col>\n  </Row>\n}\n\nconst OtherContacts = function () {\n\n  const DropDownContacts = function (props) {\n    const [opened, setOpened] = useState(false);\n\n    const toggleDropDown = () => {\n      if (opened === false) {\n        setOpened(true);\n      } else {\n        setOpened(false); \n      }\n    }\n    \n    return <CSSTransition in={opened} timeout={400} classNames=\"dropDownSectionWrapper\">\n      <comp.RowSection {...props} className={`${props.className} dropDownSection`}>\n      <CSSTransition in={opened} timeout={400} classNames=\"dropDownChevron\">\n        <div onClick={toggleDropDown} className=\"d-flex w-100 justify-content-center\">\n          <comp.MoreChevron className=\"mt--2 rounded-circle shadow-sm\" style={{color: \"var(--light)\"}} icon={faChevronCircleDown} />\n        </div>\n      </CSSTransition>\n      <CSSTransition in={opened} timeout={400}  classNames=\"dropDownSection\">\n        <comp.MoreContainer xs=\"12\" className=\" justify-content-center\">\n          {props.children}\n        </comp.MoreContainer>\n      </CSSTransition>\n      </comp.RowSection> \n    </CSSTransition>\n  }\n\n  const dataDesc = Object.keys(data.details.more).map((data, index) => <Row key={`desc-${index}`} className=\"text-right d-block font-weight-bold\">{data}</Row>)\n  const dataSep = Object.keys(data.details.more).map((_ , index) => <Row key={`sep-${index}`}>:</Row>)\n  const dataValues = []\n  for (const key in data.details.more) {\n    if (data.details.more.hasOwnProperty(key)) {\n      dataValues.push(<Row key={`val-${key}`}>{data.details.more[key]}</Row>);\n    }\n  }\n\n  return <DropDownContacts>\n    <Col xs=\"auto\">{dataDesc}</Col>\n    <Col xs=\"auto\" className=\"px-1 px-md-2\">{dataSep}</Col>\n    <Col xs=\"auto\">{dataValues}</Col>\n  </DropDownContacts>\n}\n\nconst WhoAmI = function (props) {\n  return <comp.RowSection border=\"false\">\n      <Col xs=\"auto\">\n        <Row className=\"justify-content-center\" ><h2 className=\"text-weight-bold text-center\">Who I am?</h2></Row>\n        <Row className=\"justify-content-center text-center\">{data.whoiam}</Row>\n      </Col>\n    </comp.RowSection>\n}\n\nconst ProjectContainer = function (props) {\n  return <Row className=\"mt-5 justify-content-center\">\n    <Col xs=\"12\" md=\"12\" lg=\"auto\" className=\"p-0 position-relative d-flex justify-content-center\">\n      <comp.ProjectImg className=\"rounded-lg shadow overflow-hidden\" alt=\"\" src={props.image}/>\n    </Col>\n    <Col className=\"mx-5 mt-sm-3 mt-md-2 mt-lg-0\">\n      <ReactMarkdown>{props.markdown}</ReactMarkdown>\n    </Col>\n  </Row>\n}\n\nconst ProgettiUni = function (props) {\n  return <comp.Section title=\"Progetti Universitari\">\n      <ProjectContainer image={basididatiLogo} markdown={basididati} />\n      <ProjectContainer image={ingegneriadelsoftwareLogo} markdown={ingegneriadelsoftware} />\n      <ProjectContainer image={mobdevandroidLogo} markdown={mobdevandroid} />\n      <ProjectContainer image={mobdeviosLogo} markdown={mobdevios} />\n  </comp.Section>\n}\n\nconst useGithubRepos = (initialObservable) => {\n  const [repos, setRepos] = useState([]);\n  const [observable, setRepoObservable] = useState(initialObservable);\n  useEffect(() => {\n    observable.pipe(\n      scan((acc, value) => { return Object.assign({}, acc, value) }, {})\n    ).subscribe((value) => {\n      setRepos(value);\n    });\n\n    return () => observable.unsubscribe();\n  }, [observable]);\n  return [repos, setRepoObservable]\n};\n\nconst GithubProject = function (props) {\n  return <Col xs=\"12\" md=\"6\" lg=\"6\" className=\"my-2 align-items-stretch\">\n    <div className=\"border rounded p-4 w-100 h-100\">\n      <div className={(props.proj === undefined) ? \"text-nowrap\" : \"\"}>\n        <FontAwesomeIcon icon={['fas', 'book']} />\n        <a className=\"font-weight-bold ml-1\" href={props.proj?.url || \"#\"} style={(props.proj === undefined) ? { lineHeight: 1, minWidth: \"200px\" } : {}}>{props.proj?.name || <Skeleton className=\"pr-5\"/>} </a>\n      </div>\n      <div className=\"mt-2\" style={(props.proj === undefined) ? { lineHeight: 1, minWidth: \"200px\" } : {}}>{props.proj?.description || <Skeleton />}</div>\n    </div>\n  </Col>\n}\n\nconst ProgettiPers = function (props) {\n  const [repos, setRepos] =  useGithubRepos(repositories);\n\n  useEffect(() => {setRepos(repositories)})\n\n  const skeletals = data.repositories.map((value, index) => {\n    console.log(repos[`${value.owner}/${value.repo}`])\n    return <GithubProject proj={repos[`${value.owner}/${value.repo}`]} />\n  })\n\n  return <comp.Section title=\"Progetti Personali\">\n    <Row className=\"mt-5 align-items-stretch\">\n      {skeletals}\n    </Row>\n  </comp.Section>\n}\n\nfunction App() {\n  return (<>\n  <comp.AppWrapper className=\"profile-page\">\n    <comp.AppContainer className=\"card card-profile shadow mt-0 pb-5\" fluid>\n      <TopBar />\n      <PersonalDetails />\n      <OtherContacts />\n      <WhoAmI />\n      <ProgettiUni />\n      <ProgettiPers />\n    </comp.AppContainer>\n  </comp.AppWrapper>\n  <comp.BgStatic/>\n  </>);\n}\n\nexport default App;\n","export default \"### Basi di Dati\\n\\n[![repo](https://img.shields.io/badge/repo-Github-blue)](https://github.com/darkimage/Universita-Basididati)\\n[![language](https://img.shields.io/badge/main_language-PHP-green)](https://www.php.net/)\\n[![relazione](https://img.shields.io/badge/relazione-PDF-orange)](https://github.com/darkimage/Universita-Basididati/raw/master/documents/basi_di_dati.pdf)\\n\\n---\\n\\nProgetto per l'insegnamento di **Basi di Dati e Web**, realizzato in PHP, HTML e JS con il principale scopo di effettuare un sistema di gestione delle **Task** (Attivita') aziendali. \\n\\nIl progetto verte sulla creazione di un sito web che utilizza un **database relazionale** per lo storage dei dati e una logica in **php** per la presentazione all'utente.\\n\\nNella prima fase di realizzazione e stata svolta una analisi dei requisiti per i necessari sistemi da implementare, si e' adoperata una distinzione tra Requisiti del Database per lo **storage di dati (DBMS)** e **Requisiti dell' Applicazione** (parte in PHP e presentazione ad utente finale).\\n\\nSono stati creati **tre principali sistemi cooperanti** per gestire queste necessita':\\n\\n - Utilizzo del **Pattern MVC** (Model-View-Controller)\\n - Creazione di un **Custom Templating Engine** (Templating Classes)\\n\\t> Utilizzato per effetuare una composizione modulare di template HTML, rendendo piu efficente la realizzazione del progetto sfruttando il riutilizzo del codice. Il sistema e' un **preprocessor** per HTML, effettivamente virualizzando il DOM Tree rendendolo programmaticalmente disponibile in codice PHP\\n\\n\\t> **[Per maggiori info sul sistema](https://github.com/darkimage/Universita-Basididati#custom-templating-engine)**\\n - Creazione di **Domain Classes** per l'astrazione del DB\\n\\n\";","export default \"## Ingegneria del Software\\n\\n[![repo](https://img.shields.io/badge/repo-Github-blue)](https://github.com/darkimage/Universita-IngegneriaDelSoftware)\\n[![language](https://img.shields.io/badge/main_language-Groovy_Grails-green)](https://grails.org/)\\n[![relazione](https://img.shields.io/badge/relazione-PDF-orange)](https://github.com/darkimage/Universita-IngegneriaDelSoftware/raw/master/documents/SistemadiVenditaOnline_LucaFaggion_274857.pdf)\\n\\n---\\n\\nProgetto realizzato utilizzando il framework Groovy **[Grails](https://grails.org/)**.\\n\\nIl principale scopo del progetto e' di ottenere una dimestichezza nello sviluppo di progetti utilizzando il metodo di iterazione continua di sviluppo e test tramite la metodologia AGILE.\\n\\nIl documento d'uso e' disponibile **[qui](https://github.com/darkimage/Universita-IngegneriaDelSoftware/raw/master/documents/Istruzioni-Uso-e-Installazione-274857-Faggion-Luca.pdf)**.\\n\\nIl report dei test e consultabile **[qui](https://darkimage.github.io/Universita-IngegneriaDelSoftware/)** (101 Unit e Integration tests, il codice dei test e' definito **[qui](https://github.com/darkimage/Universita-IngegneriaDelSoftware/tree/master/src/test/groovy/com/lucafaggion))**.\\n\\nNell'Analisi dei requisiti viene redatto un documento (**Documento dei Requisiti**) che comprende una esaustiva descrizione dettagliata delle necessita' del sistema.\";","export default \"## Programmazione sistemi mobili - Android\\n\\n[![repo](https://img.shields.io/badge/repo-Github-blue)](https://github.com/darkimage/Universita-android-ChronotrackerApp)\\n![language](https://img.shields.io/badge/main_language-Java-green)\\n[![relazione](https://img.shields.io/badge/relazione-PDF-orange)](https://github.com/darkimage/Universita-android-ChronotrackerApp/raw/master/documents/relazione_android.pdf)\\n\\n---\\n\\nApplicazione realizzata utilizzando **[Android Studio](https://developer.android.com/studio)**.\\n\\nStrutturata per utilizzare tutte le tecniche di sviluppo mobile quali:\\n\\n - Utilizzo del pattern di programmazione **MVC (Model-View-Controller)** (che e' anche la base del Framework UI di Android)\\n - Utilizzo della libreria **[Android Material](https://material.io/develop/android/)** per ottenere una UI moderna, responsiva e conforme alle specifiche del **Material Design**.\\n\\nIl progetto e' strutturato per utilizzare tutte le linee guida Google per la realizzazione di applicativi mobile.\\n\\nI principali sono:\\n\\n- Utilizzo del **pattern [MVC](https://it.wikipedia.org/wiki/Model-view-controller)**\\n- Utilizzo di **Query asincrone** per la richiesta/ricezione dei dati dal Model\\n\\t> E' stato creato un sistema ADHOC per tale scopo che utilizza una classe anche essa creata per tale esigenza, [NoLeakAsyncTask](https://github.com/darkimage/Universita-android-ChronotrackerApp#classe-noleakasynctask)\\n- Utilizzo di comunicazione tra Controllers tramite **[Observables (LiveData)](https://developer.android.com/topic/libraries/architecture/livedata)**\\n\\nl'applicazione realizza una app per il tracciamento e cronometraggio di atleti, mette a disposizione interfaccie per i profili degli altleti e la loro history delle prove cronometrate.\";","export default \"## Programmazione di sistemi mobili - iOS\\n\\n[![repo](https://img.shields.io/badge/repo-Github-blue)](https://github.com/darkimage/Universita-ios-weatherApp)\\n[![language](https://img.shields.io/badge/main_language-Objective_C-green)](https://it.wikipedia.org/wiki/Objective-C)\\n[![relazione](https://img.shields.io/badge/relazione-PDF-orange)](https://github.com/darkimage/Universita-ios-weatherApp/raw/master/Documents/relazione_ios.pdf)\\n\\n---\\n\\nProgetto realizzato con **[XCode](https://en.wikipedia.org/wiki/Xcode)** e Objective-C.\\n\\nl'applicazione consente di visualizzare all'utente le previsioni meteo per le citta da lui inserite. Ogni citta a la propria history, nella quale sono visualizzate le passate condizioni meteo. Ogni citta puo essere marcata come favorita e essere esportata su un file **[CSV](https://it.wikipedia.org/wiki/Comma-separated_values)** per poi essere ricaricate nell'applicazione.\\n\\nStrutturata per utilizzare tutte le tecniche di sviluppo mobile quali:\\n\\n - Utilizzo del pattern di programmazione **MVC (Model-View-Controller)**\\n - Utilizzo delle API **[OpenWeatherMap](OpenWeatherMap)** per i dati relativi al meteo.\\n - Utilizzo di **[Skeleton View](https://uxdesign.cc/what-you-should-know-about-skeleton-screens-a820c45a571a)**.\\n\\t > Consento di mostrare all'utente una interfaccia provvisoria mentre vengono recuperati i dati che saranno poi mostrati quando disponibili risultando cosi in una esperienza piu gradevo per l'utente senza continui loading screens.\\n\\t \\n- Utilizzo di richieste Http asincrone.\\n\\n\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './global-components';\nimport 'animate.css';\nimport { faArtstation, faGithubSquare, faCuttlefish, faJs, faPython, faJava } from '@fortawesome/free-brands-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faBook } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faGithubSquare,\n  faArtstation,\n  faCuttlefish,\n  faJs,\n  faPython,\n  faJava,\n  faBook\n);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister(); \n","module.exports = __webpack_public_path__ + \"static/media/photo.2dc69583.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.3dc4956b.svg\";","module.exports = __webpack_public_path__ + \"static/media/basididati.189f1ac0.png\";","module.exports = __webpack_public_path__ + \"static/media/ingegneriadelsoftware.2a07b65d.png\";","module.exports = __webpack_public_path__ + \"static/media/mobdevandroid.2b3d7279.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mobdevios.f7ff0752.png\";"],"sourceRoot":""}